readLines(n=1)
}
answer<-substr(myreadline(prompt="bid on left object, y or n?"),1,1)
y
p1bid=c(0,0,0)
myreadline <- function(prompt="")
{
cat(prompt)
readLines(n=1)
}
answer<-substr(myreadline(prompt="bid on left object, y or n?"),1,1)
"y"
?prompt
?strplit
?strsplit
source('~/comboauction.R');
properties = 6
choicelist <- list(12,35,45,15)
choicelist <- as.character(choicelist)
n <- length(choicelist)
choicelist1<-list(1:n)
for (i in 1:n) {
choicelist1[[i]]<-combn(choicelist,i,simplify = FALSE)
}
combos = 0
for (i in 1:n) { combos = combos + length(choicelist1[[i]]) }
arbitraryvector = c(1:combos)
choicematrix <- matrix(arbitraryvector,nrow = properties,ncol = combos)
choicematrix*0->choicematrix
for (i in 1:n) {
for (element in choicelist1[[i]]) {
for (j in 1:properties) {
for (k in 1:combos) {
if (as.character(j) %in% strsplit(element,"")) {
choicematrix[j,k]<-1 }}}}}
choicematrix
choicelist[[1]]
strsplit(choicelist[[1]],"")
"1" %in% strsplit(choicelist[[1]],"")
"12" %in% strsplit(choicelist[[1]],"")
strsplit(choicelist[[1]],"")
choicelist[[[1]]]<-strsplit(choicelist[[1]],"")
choicelist[[1]]<-strsplit(choicelist[[1]],"")
choicelist[[1]]
1 in choicelist[[1]]
"1" in choicelist[[1]]
"1" %in% choicelist[[1]]
?within
within(choicelist[[1]],"1")
find
?find
find("1",choicelist[[1]])
find("2", choicelist[[1]])
apropros("1",choicelist[[1]])
apropos("1",choicelist[[1]])
apropos("^.$")
?match
match("1",choicelist[[1]])
as.table(choicelist[[1]])
?contain
?contains
??contains
?find
find("1")
?search
?in
??in
?"in"
?table
choicelist[[1]]
choicelist[1]
choicelist[1]<-as.vector(choicelist[1])
choicelist[1]
as.table(choicelist[1])
choicelist[1]
%in%
in
%in
in%
arg(%in%)
arg(sin)
argument(sin)
parameter(sin)
par(sin)
c<-list(1,2,3)
c<-list("1","2","3")
"1" %in% c
?list
is.list(choicelist[[1]])
is.list(choicelist)
strsplit(choicelist)
?strsplit
strsplit(choicelist,"")
strsplit(choicelist[[1]],"")
is.character(choicelist)
is.vector(choicelist)
as.vector(choicelist)->choicelist
str.split(choicelist,"")
strsplit(choicelist,"")
?list
c(1,2,3)+c(4,5,6)
choice1<-(1,2,3,4)
choice1<-list(1,2,3)
choice2<-list(2,4,5)
choicelist<-list(list(1,2,3),list(2,4,5))
choicelist
choice1++choice2
paste(choice1,choice2)
paste(choice1,choice2,sep=",")
paste(choice1,choice2,sep=",",collapse=",")
as.vector(paste(choice1,choice2,sep=",",collapse=","))
choicevector<-as.vector(paste(choice1,choice2,sep=",",collapse=","))
choicevector
strsplit(choicevector,"")
?split
split(choicevector,)
split(choicevector,",")
as.str(choicevector)
str(1,2,3)
?str
choice1
choice2
?seq
seq(1,length(choice1)+length(choice2),1)
choicevector<-seq(1,length(choice1)+length(choice2),1)*0
choicevecotr
choicevector
for (element in choicevector) {
}
for (i in range 1:3) {
for (i in 1:3) {
choicevector[i]<-choice1[i] }
choicevecotr
choicevector
as.character(choicevector)
"2" %in% choicevector
match(choicevector,"2")
matches<-match(choicevector,"2")
matches
sum(matches)
?matches
?match
match(choicevector,"2",nomatch=0)
matches<-match(choicevector,"2",nomatch=0)
sum(matches)
as.matrix(choice1,choice2)
?as.matrix
choicevector1<-list(choice1,choice2)
choicevector1
choicevector[[2]][[1]]
?matrix
matrix(nrow=6,ncol=2)
for (i in 1:2) {
for (j in 1:3) {
if (sum(match(choicevector1[[i]][[j]],"1",nomatch=0))>0) }}
match(choicevector1[[1]],"1",nomatch=0)
for (i in 1:2) {
match1<-match(choicevector1[[i]],"1",nomatch=0)
match2<-match(choicevector1[[i]],"2",nomatch=0)
match3<-match(choicevector1[[i]],"3",nomatch=0)
matrix(match1,match2,match3,nrow=6,ncol=2)
}
for (i in 1:2) {match1<-match(choicevector1[[i]],"1",nomatch=0)
+ match2<-match(choicevector1[[i]],"2",nomatch=0)
+ match3<-match(choicevector1[[i]],"3",nomatch=0)
+ matrix(match1,match2,match3,nrow=6,ncol=2)
+ }
for (i in 1:2) {match1<-match(choicevector1[[i]],"1",nomatch=0)
+ match2<-match(choicevector1[[i]],"2",nomatch=0)
+ match3<-match(choicevector1[[i]],"3",nomatch=0)
+ matrix(list(match1,match2,match3),nrow=6,ncol=2)
+ }
for (i in 1:2) { match1<-match(choicevector1[[i]],"1",nomatch=0)
match2<-match(choicevector1[[i]],"2",nomatch=0)
match3<-match(choicevector1[[i]],"3",nomatch=0)
matrix(list(match1,match2,match3),nrow=6,ncol=2)
}
for (i in 1:2) { match1<-match(choicevector1[[i]],"1",nomatch=0)
choicematrix
choicematrix
source('~/comboauction.R');
choicematrix
for (i in 1:2) {
match1<-match(choicevector1[[i]],"1",nomatch=0)
match2<-match(choicevector1[[i]],"2",nomatch=0)
match3<-match(choicevector1[[i]],"3",nomatch=0)
choicematrix<-matrix(list(match1,match2,match3),nrow=6,ncol=2)
}
choicematrix
source('~/comboauction.R');
for (i in 1:2) {
match1<-match(choicevector1[[i]],"1",nomatch=0)
match2<-match(choicevector1[[i]],"2",nomatch=0)
match3<-match(choicevector1[[i]],"3",nomatch=0)
choicematrix<-matrix(list(match1,match2,match3),nrow=6,ncol=2)
}
choicematrix
}
choicematrix
USDTZS <- read.csv("~/Desktop/USDTZS.csv")
View(USDTZS)
View(USDTZS)
USDTZS <- read.csv("~/Desktop/USDTZS.csv", header=F)
View(USDTZS)
?foreach
traffic_estimation_mom.R
?source
source(traffic_esimation_mom.R)
traffic_esimation_mom.R
traffic_estimation_mom.R
source('~/Desktop/traffic_estimation_mom.R');
source('~/Desktop/example1.R');
source(traffic_estimation_mom.R)
?source
source(traffic_estimation_mom.R, local = "FALSE")
source(traffic_estimation_mom.R, local = FALSE)
load("~/Desktop/traffic_estimation_mom.R")
source('~/Desktop/example1.R');
source('~/Desktop/example1.R');
source('~/Desktop/example1.R');
?rbind
c<-matrix(0,2,10)
c
cdot<-apply(c,2,sum)
cdot
?apply
A <- rbind(c(1,0,3,0,0,5,0,0,0,0,0,0),
c(0,1,1,0,0,1,0,0,0,0,0,0),
c(0,0,0,1,0,1,1,0,0,1,0,8),
c(0,0,0,0,1,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,1,1,6,1,1,0),
c(0,0,1,0,0,1,0,0,1,0,0,0),
c(0,0,0,0,0,0,0,0,0,1,1,1))
A
Adot<-apply(A,2,sum)
Adot
?crossprod
package.skeleton(name = "SD Traffic via MM", path="~/desktop")
View(c)
View(c)
View(c)
View(c)
View(c)
fix(S)
fix(cdot)
source('/Users/Paul/Desktop/traffic_estimation_mom.R');
source('/Users/Paul/Desktop/example1.R');
source('/Users/Paul/Desktop/example1.R');
package.skeleton(name = "SD Traffic via MM", path="~/desktop")
package.skeleton(name = "SD Traffic via MM", path="~/desktop")
